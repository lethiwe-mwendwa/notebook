{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome This website is a quiet space \u2014 part lab, part journal \u2014 where I document what I learn, what I question, and what I build. I also use this space to document what inspires me in a wide range of mediums. \ud83e\udde0 Core Focus : - Computational science - Self Study - Philosophical reflection - Media Journal","title":"Home"},{"location":"about/","text":"Who am I? My name is Lethiwe Mwendwa and I am a software engineer interested in Computational Sciences, Maths and Physics. GitHub LinkedIn Send me an email Your email: Your message: Send","title":"About"},{"location":"contact/","text":"","title":"Contact"},{"location":"courseoutline/","text":"\u2705 Learning Applied Mathematics for Computational Mechanics This is a structured pathway toward mastering the mathematical foundations needed for simulation, modeling, and computational mechanics. \ud83e\uddea 1. Foundational Mathematics [ ] Multivariable Calculus & Linear Algebra Vectors, gradients, Jacobians, matrix operations [ ] Applied Linear Algebra Eigenvalues, SVD, matrix factorizations, numerical conditioning \ud83d\udcc0 2. Analysis and Functional Analysis [ ] Real Analysis Limits, continuity, convergence, rigorous calculus [ ] Fourier & Functional Analysis Fourier series/transforms, Hilbert spaces, orthogonality \ud83d\udd01 3. Differential Equations [ ] Ordinary Differential Equations (ODEs) Initial value problems, stability, systems of ODEs [ ] Partial Differential Equations (PDEs) Wave, heat, Laplace equations, boundary/initial conditions \ud83c\udf32 4. Probability & Stochastic Processes [ ] Core Probability Random variables, distributions, expectation, Bayes\u2019 rule [ ] Stochastic Processes Markov chains, Brownian motion, Ito calculus (intro) \ud83d\udda5\ufe0f 5. Numerical and Scientific Computing [ ] Numerical Methods Root-finding, interpolation, numerical ODE/PDE solutions [ ] Scientific Computing Tools MATLAB, Python (NumPy/SciPy), Julia, C++, libraries \ud83d\udcca 6. Optimization & Modeling [ ] Optimization Linear/nonlinear programming, gradient descent, constraints [ ] Mathematical Modeling Dimensional analysis, nondimensionalization, real-world systems \ud83e\udde0 7. Advanced Electives (Pick 3\u20134) [ ] Complex Analysis (MATH\u202f106 / MATH\u202f116) [ ] Signal/Image Processing & Inverse Problems (MATH\u202f221A/B) [ ] Mathematical Finance (MATH\u202f238) [ ] Mathematical Biology (MATH\u202f224) [ ] Dynamical Systems & Chaos Theory \ud83c\udf0d 8. Interdisciplinary Applications [ ] Physics Mechanics, Electromagnetism, Quantum foundations [ ] Engineering FEM, control theory, robotics, elasticity, fluid dynamics [ ] Computer Science Algorithms, machine learning, numerical simulation","title":"\u2705 Learning Applied Mathematics for Computational Mechanics"},{"location":"courseoutline/#learning-applied-mathematics-for-computational-mechanics","text":"This is a structured pathway toward mastering the mathematical foundations needed for simulation, modeling, and computational mechanics.","title":"\u2705 Learning Applied Mathematics for Computational Mechanics"},{"location":"courseoutline/#1-foundational-mathematics","text":"[ ] Multivariable Calculus & Linear Algebra Vectors, gradients, Jacobians, matrix operations [ ] Applied Linear Algebra Eigenvalues, SVD, matrix factorizations, numerical conditioning","title":"\ud83e\uddea 1. Foundational Mathematics"},{"location":"courseoutline/#2-analysis-and-functional-analysis","text":"[ ] Real Analysis Limits, continuity, convergence, rigorous calculus [ ] Fourier & Functional Analysis Fourier series/transforms, Hilbert spaces, orthogonality","title":"\ud83d\udcc0 2. Analysis and Functional Analysis"},{"location":"courseoutline/#3-differential-equations","text":"[ ] Ordinary Differential Equations (ODEs) Initial value problems, stability, systems of ODEs [ ] Partial Differential Equations (PDEs) Wave, heat, Laplace equations, boundary/initial conditions","title":"\ud83d\udd01 3. Differential Equations"},{"location":"courseoutline/#4-probability-stochastic-processes","text":"[ ] Core Probability Random variables, distributions, expectation, Bayes\u2019 rule [ ] Stochastic Processes Markov chains, Brownian motion, Ito calculus (intro)","title":"\ud83c\udf32 4. Probability &amp; Stochastic Processes"},{"location":"courseoutline/#5-numerical-and-scientific-computing","text":"[ ] Numerical Methods Root-finding, interpolation, numerical ODE/PDE solutions [ ] Scientific Computing Tools MATLAB, Python (NumPy/SciPy), Julia, C++, libraries","title":"\ud83d\udda5\ufe0f 5. Numerical and Scientific Computing"},{"location":"courseoutline/#6-optimization-modeling","text":"[ ] Optimization Linear/nonlinear programming, gradient descent, constraints [ ] Mathematical Modeling Dimensional analysis, nondimensionalization, real-world systems","title":"\ud83d\udcca 6. Optimization &amp; Modeling"},{"location":"courseoutline/#7-advanced-electives-pick-34","text":"[ ] Complex Analysis (MATH\u202f106 / MATH\u202f116) [ ] Signal/Image Processing & Inverse Problems (MATH\u202f221A/B) [ ] Mathematical Finance (MATH\u202f238) [ ] Mathematical Biology (MATH\u202f224) [ ] Dynamical Systems & Chaos Theory","title":"\ud83e\udde0 7. Advanced Electives (Pick 3\u20134)"},{"location":"courseoutline/#8-interdisciplinary-applications","text":"[ ] Physics Mechanics, Electromagnetism, Quantum foundations [ ] Engineering FEM, control theory, robotics, elasticity, fluid dynamics [ ] Computer Science Algorithms, machine learning, numerical simulation","title":"\ud83c\udf0d 8. Interdisciplinary Applications"},{"location":"notes/","text":"Learning Applied Mathematics for Computational Mechanics This is a structured pathway toward mastering the mathematical foundations needed for simulation, modeling, and computational mechanics. I have not yet started recording my learning here \u26a0\ufe0f \ud83e\uddea 1. Foundational Mathematics [ ] Multivariable Calculus & Linear Algebra Vectors, gradients, Jacobians, matrix operations [ ] Applied Linear Algebra Eigenvalues, SVD, matrix factorizations, numerical conditioning \ud83d\udcc0 2. Analysis and Functional Analysis [ ] Real Analysis Limits, continuity, convergence, rigorous calculus [ ] Fourier & Functional Analysis Fourier series/transforms, Hilbert spaces, orthogonality \ud83d\udd01 3. Differential Equations [ ] Ordinary Differential Equations (ODEs) Initial value problems, stability, systems of ODEs [ ] Partial Differential Equations (PDEs) Wave, heat, Laplace equations, boundary/initial conditions \ud83c\udf32 4. Probability & Stochastic Processes [ ] Core Probability Random variables, distributions, expectation, Bayes\u2019 rule [ ] Stochastic Processes Markov chains, Brownian motion, Ito calculus (intro) \ud83d\udda5\ufe0f 5. Numerical and Scientific Computing [ ] Numerical Methods Root-finding, interpolation, numerical ODE/PDE solutions [ ] Scientific Computing Tools MATLAB, Python (NumPy/SciPy), Julia, C++, libraries \ud83d\udcca 6. Optimization & Modeling [ ] Optimization Linear/nonlinear programming, gradient descent, constraints [ ] Mathematical Modeling Dimensional analysis, nondimensionalization, real-world systems \ud83e\udde0 7. Advanced Electives (Pick 3\u20134) [ ] Complex Analysis (MATH\u202f106 / MATH\u202f116) [ ] Signal/Image Processing & Inverse Problems (MATH\u202f221A/B) [ ] Mathematical Finance (MATH\u202f238) [ ] Mathematical Biology (MATH\u202f224) [ ] Dynamical Systems & Chaos Theory \ud83c\udf0d 8. Interdisciplinary Applications [ ] Physics Mechanics, Electromagnetism, Quantum foundations [ ] Engineering FEM, control theory, robotics, elasticity, fluid dynamics [ ] Computer Science Algorithms, machine learning, numerical simulation","title":"Notes"},{"location":"notes/#1-foundational-mathematics","text":"[ ] Multivariable Calculus & Linear Algebra Vectors, gradients, Jacobians, matrix operations [ ] Applied Linear Algebra Eigenvalues, SVD, matrix factorizations, numerical conditioning","title":"\ud83e\uddea 1. Foundational Mathematics"},{"location":"notes/#2-analysis-and-functional-analysis","text":"[ ] Real Analysis Limits, continuity, convergence, rigorous calculus [ ] Fourier & Functional Analysis Fourier series/transforms, Hilbert spaces, orthogonality","title":"\ud83d\udcc0 2. Analysis and Functional Analysis"},{"location":"notes/#3-differential-equations","text":"[ ] Ordinary Differential Equations (ODEs) Initial value problems, stability, systems of ODEs [ ] Partial Differential Equations (PDEs) Wave, heat, Laplace equations, boundary/initial conditions","title":"\ud83d\udd01 3. Differential Equations"},{"location":"notes/#4-probability-stochastic-processes","text":"[ ] Core Probability Random variables, distributions, expectation, Bayes\u2019 rule [ ] Stochastic Processes Markov chains, Brownian motion, Ito calculus (intro)","title":"\ud83c\udf32 4. Probability &amp; Stochastic Processes"},{"location":"notes/#5-numerical-and-scientific-computing","text":"[ ] Numerical Methods Root-finding, interpolation, numerical ODE/PDE solutions [ ] Scientific Computing Tools MATLAB, Python (NumPy/SciPy), Julia, C++, libraries","title":"\ud83d\udda5\ufe0f 5. Numerical and Scientific Computing"},{"location":"notes/#6-optimization-modeling","text":"[ ] Optimization Linear/nonlinear programming, gradient descent, constraints [ ] Mathematical Modeling Dimensional analysis, nondimensionalization, real-world systems","title":"\ud83d\udcca 6. Optimization &amp; Modeling"},{"location":"notes/#7-advanced-electives-pick-34","text":"[ ] Complex Analysis (MATH\u202f106 / MATH\u202f116) [ ] Signal/Image Processing & Inverse Problems (MATH\u202f221A/B) [ ] Mathematical Finance (MATH\u202f238) [ ] Mathematical Biology (MATH\u202f224) [ ] Dynamical Systems & Chaos Theory","title":"\ud83e\udde0 7. Advanced Electives (Pick 3\u20134)"},{"location":"notes/#8-interdisciplinary-applications","text":"[ ] Physics Mechanics, Electromagnetism, Quantum foundations [ ] Engineering FEM, control theory, robotics, elasticity, fluid dynamics [ ] Computer Science Algorithms, machine learning, numerical simulation","title":"\ud83c\udf0d 8. Interdisciplinary Applications"},{"location":"studyReasons/","text":"\u2705 Why This is a Good Plan \ud83e\uddea 1. Foundational Mathematics Multivariable Calculus & Linear Algebra are non-negotiable. They're the backbone of almost every field in applied math, mechanics, and simulations (e.g. deformation gradients, tensors, finite element methods). Applied Linear Algebra gets you comfortable with matrix factorizations, eigenvalue problems, and numerical stability \u2014 essential for real-world computation and mechanics. \ud83d\udcc0 2. Analysis and Functional Analysis Real Analysis sharpens your mathematical maturity and helps with understanding convergence, continuity, and rigor \u2014 useful in numerical analysis and PDE theory. Fourier & Functional Analysis are foundational to solving PDEs, especially in heat, wave, and quantum systems. Also useful for signal processing in physics/engineering. \ud83d\udd01 3. Differential Equations ODEs show up in particle mechanics, control systems, circuits. PDEs are the heart of continuum mechanics (e.g. Navier\u2013Stokes, elasticity, diffusion). You can\u2019t do computational mechanics without understanding these deeply. \ud83c\udf32 4. Probability & Stochastic Processes While less central than analysis/differential equations for deterministic mechanics, these become vital in: Uncertainty quantification Monte Carlo simulations Stochastic modeling of physical systems (e.g. Brownian motion, turbulence) And essential if you branch into computational physics or machine learning. \ud83d\udda5\ufe0f 5. Numerical and Scientific Computing Absolutely essential. You need these to implement everything else on a computer. Covers solving ODEs/PDEs, discretization, numerical linear algebra, and stability \u2014 which is the heart of computational mechanics. \ud83d\udcca 6. Optimization & Modeling Optimization appears in: Mechanics (e.g. energy minimization, inverse problems) Engineering design Control theory Mathematical Modeling is how theory connects to reality. It trains you to take a physical situation, abstract it, and simulate it. \ud83e\udde0 7. Advanced Electives Pick based on your eventual specialization: Dynamical systems & chaos theory \u2192 important in nonlinear mechanics and real-world behavior. Signal processing & inverse problems \u2192 useful in imaging, materials testing, and anything where you reconstruct or interpret physical data. Complex Analysis \u2192 nice-to-have if doing any analytical methods or physics. \ud83c\udf0d 8. Interdisciplinary Applications These show you how to apply your knowledge: Physics (especially mechanics) \u2192 aligns perfectly with your interests. Engineering applications (e.g. FEM, control) are exactly where computational mechanics lives. Computer science (algorithms, ML) helps with scalable simulations, solvers, and optimization. \ud83d\udd27 How to Tackle This You don\u2019t need to do all of it at once. Here\u2019s a reasonable order: Start with: Multivariable calculus Linear algebra ODEs Then: PDEs Numerical methods Real analysis (at least intuitive) As you get comfortable: Fourier/Functional analysis Scientific computing tools (e.g. NumPy/SciPy, C++, Julia) Mathematical modeling Specialize later with electives based on what excites you or what your simulation projects need. \u2705 Verdict: Yes \u2014 pursue this This is a rigorous, powerful roadmap. It\u2019s not light, but it\u2019s directly relevant to: Building simulations Understanding the math behind mechanics Gaining the depth needed for a master's or research in computational mechanics You can absolutely treat this as a self-study degree in applied mathematics for simulation and mechanics. Let me know if you want help breaking this into a weekly/monthly study plan, or picking textbooks for each section. \u2705 Your Given Order (With Commentary) 1. \ud83e\uddea Foundational Mathematics Multivariable Calculus & Linear Algebra \u2192 Applied Linear Algebra \u2705 Perfect starting point. These are the raw tools used everywhere else. Applied Linear Algebra builds directly on the fundamentals. \ud83d\udcc0 Analysis and Functional Analysis Real Analysis \u2192 Fourier & Functional Analysis \u2705 Good progression. Real Analysis builds rigor and prepares you for understanding infinite-dimensional spaces. Fourier & Functional Analysis are naturally more advanced and build off this. Optional tweak: You could interleave some Fourier analysis before full real analysis if you're aiming for practical PDE solutions early \u2014 many courses do this. \ud83d\udd01 Differential Equations ODEs \u2192 PDEs \u2705 Excellent flow. ODEs are simpler and appear in almost all physical systems. PDEs are more complex and naturally follow from ODEs. \ud83c\udf32 Probability & Stochastic Processes Core Probability \u2192 Stochastic Processes \u2705 Clear progression. You need foundational probability before you can make sense of stochastic systems. These are helpful once you\u2019ve got deterministic systems down. \ud83d\udda5\ufe0f Numerical and Scientific Computing Numerical Methods \u2192 Scientific Computing Tools \u2705 Spot-on ordering. First understand the algorithms, then the tools (like C++, Python, MATLAB) to implement them. Don\u2019t skip numerical linear algebra! Note: You could also introduce some computing tools early to help with learning earlier topics, e.g., visualizing multivariable functions or solving ODEs. \ud83d\udcca Optimization & Modeling Optimization \u2192 Mathematical Modeling \u2705 Strong choice. Optimization techniques underpin many modeling strategies and numerical methods. Modeling is where everything comes together and is best learned after you\u2019ve built some technical maturity. \ud83e\udde0 Advanced Electives Pick 3\u20134 as specialization \u2705 Right place for these. Once you've built core skills, you can explore advanced topics depending on your interests (e.g., dynamical systems, inverse problems). \ud83c\udf0d Interdisciplinary Applications Physics, Engineering, CS \u2705 Beautifully placed as a capstone. These serve as both motivation and application. They can be explored alongside or after the core curriculum \u2014 this is where you \u201cbuild stuff.\u201d \ud83d\udd01 Summary Your order is excellent. It's: Pedagogically sound (from fundamentals \u2192 theory \u2192 numerics \u2192 application) Aligned with your interests in computational mechanics Modular, meaning you can move pieces around depending on what you want to build or understand next","title":"studyReasons"},{"location":"Media%20Journal/anime/","text":"","title":"Anime"},{"location":"Media%20Journal/books/","text":"","title":"Books"},{"location":"Media%20Journal/manga/","text":"","title":"Manga"},{"location":"Media%20Journal/movies/","text":"","title":"Movies"},{"location":"Media%20Journal/music/","text":"","title":"Music"},{"location":"Media%20Journal/videos/","text":"","title":"Videos"},{"location":"Work/creativeWork/","text":"","title":"Creative Work"},{"location":"Work/devWork/","text":"","title":"Software Dev"},{"location":"Work/philosophyWork/","text":"","title":"Philosophy"}]}